AUTHOR: Jess Portnoy
VERSION: 0.1
LAST MODIFIED: Wed Feb 06 20:00:00 EST 2013
Modified by Zohar Babin to fit GitHub paths

This is a mini howto for using the auto installer for self hosted Kaltura environments.

Pre-reqs:
=========
Clone all the Kaltura package repositories (using ce-packager: https://github.com/kaltura/ce-packager)
Place the package under: /tmp/Kaltura-v6.0.1

Installation:
=============
Before running the installer, one needs to edit user_input.ini. 
A sample file can be found under:
https://github.com/kaltura/ce-configurations/blob/master/auto_install/user_input.ini

To run the auto installer, type as super user:
# ./main.sh
You will be presented with the following options:

0. install an all in 1 instance
1. batch instance
2. sphinx instance
3. Front [API] machine
4. export Kaltura's MySQL DBs
5. configure MySQL && Sphinx for this host
6. unistall

The installer shall perform the following actions:
- Install the role you selected [all in 1, batch, Sphinx, front [API].
- Create a test partner, based on the values set in user_input.ini
- Upload sample content using a CSV file

Files:
======
* user_input.ini - input file for the auto installer. This should be edited to reflect the details of your deployment.
* main.sh - a simple menu for selecting the desired option
* kaltura.rc - a library of Bourne shell compatible functions. This is used by the auto installer but can also be used by any other peace of code. Simply source kaltura.rc into your script.
* auto_inst_falcon_centos.sh - this installs the all in 1 instance which is the base for all other role installations.
* cleanup.sh - an uninstall script which supports the following options:
    1. Remove Kaltura and modifications that were done to services(Apache, MySQL, PHP, Memcache) during the install. Packages will NOT be removed. (Recommended on servers that are doing other things.)
    2. Remove Kaltura and all related services(Apache, MySQL, PHP, Memcache). Packages WILL be removed. Use this to bring the server back to near distribution clean.
    3. Remove Kaltura and all related services EXCEPT MySQL and the data. This is good if you want to re-configure the server but keep data intact.
* export_db.sh - a stand alone script to export the Kaltura DBs. This script is called when selecting option #4 from main.sh
* create_partner.php - an API script to create the test partner.
* upload_csv.php - an API script to upload test content, makes use of kaltura_batch_upload_eagle.csv which is also included under the same directory.
* mysql_rep.sh - configures replication between MySQL master and node instances.

Using kaltura.rc functions to write your own scripts:
=====================================================
The following sample code shall create a test partner based on the following values from user_input.ini:
TEST_PARTNER_EMAIL=jess@kaltura.com
TEST_PARTNER_PASSWD=jesskalt

And then use the upload_assets function which makes use of upload_csv.php to perform a bulk upload operation.

#!/bin/sh
. kaltura.rc
create_partner
upload_assets $TEST_PARTNER_ID
