#The main installation of kaltura
install_kaltura(){
	installer_config=installer/installer/AppConfig.class.php
		
	# Check if there is an existing installation
	if [[ -d $base_dir ]];then
		printf "A Kaltura installation already exists in %s\nShould I remove it(y/n)?" "$base_dir" | tee -a $logfile
		read answer
		if [[ $answer == 'y' ]];then
			uninstall_kaltura
		else
			printf "Since there is an existing directory and you choose not to remove it the installation can not continue\n" |tee -a $logfile
			exit 1
		fi
	fi
	# No archive file and no package directory
	if [[ ! -f $archive_file ]];then
		printf  "Error: archive file not found\n" | tee -a $logfile
		exit 1
	else
		printf "Extracting kaltura package archive\n" | tee -a $logfile
		rm -rf $package_path
		mkdir -p $package_path
		if ! tar -zxf $archive_file -C $package_path &>> $logfile;then
			printf "Error: unable to extract archive\n" | tee -a $logfile
			exit 1
		fi
	fi
	
	# Bring in fresh files
	"cp" templates/AppConfig.class.php $installer_config &>> $logfile
	"cp" templates/install.php installer/install.php &>> $logfile
	rm -f installer/user_input.ini &>> $logfile
	printf "Configuring kaltura installer\n" | tee -a $logfilg
	sed -i "s|%TIME_ZONE%|$time_zone|g" $installer_config &>> $logfile
	sed -i "s|%BASE_DIR%|$base_dir|g" $installer_config &>> $logfile
	sed -i "s|%HOSTNAME%|$hostname|g" $installer_config &>> $logfile
	sed -i "s|%ADMIN_USER%|$admin_user|g" $installer_config &>> $logfile
	sed -i "s|%ADMIN_PASSWORD%|$admin_pass|g" $installer_config &>> $logfile
	sed -i "s|%MYSQL_HOST%|$mysql_host|g" $installer_config &>> $logfile
	sed -i "s|%MYSQL_PORT%|$mysql_port|g" $installer_config	 &>> $logfile
	sed -i "s|%MYSQL_USER%|$mysql_user|g" $installer_config &>> $logfile
	sed -i "s|%MYSQL_PASSWORD%|$mysql_password|g" $installer_config &>> $logfile
	sed -i "s|%CREATE_NEW_DB%|$create_new_db|g" $installer_config &>> $logfile
	sed -i "s|%SPHINX_HOST%|$sphinx_host|g" $installer_config &>> $logfile
	sed -i "s|%KENVIORNMENT%|$kenvironment|g" $installer_config &>> $logfile
	sed -i "s|%PACKAGE_PATH%|$package_path/package|g" installer/install.php &>> $logfile
	
	
	# Run the installer in silent mode
	printf "Starting main installer\n"  | tee -a $logfile	
	cd installer
	if ! php install.php -s | tee -a $logfile;then
		printf "Error: main installation failed, %s\n" "$(tail $logfile)" |tee -a $logfile
		exit 1
	fi	
	printf "Main installer has completed\n" | tee -a $logfile
	
	# Change the verbosity on log files
	printf "Changing priority of log files to 5\n" | tee -a $logfile
	sed -i 's/priority.priority = 7/priority.priority = 5/g' $base_dir/app/configurations/logger.ini
	
	# Add red5 service link
	ln -s $base_dir/bin/red5/red5 /etc/init.d/red5
}	

uninstall_kaltura(){
	printf "Uninstalling Kaltura\n" | tee -a $logfile
	for var in kaltura_batch kaltura_monit kaltura_populate kaltura_sphinx red5;do
		printf "Stopping service %s\n" "$var" | tee -a $logfile
		service $var stop &>> /dev/null
		chkconfig $var off
	done
	printf "Removing the Kaltura directory\n" | tee -a $logfile
	rm -rf $base_dir
	printf "Removing system files\n" | tee -a $logfile
	rm -f /etc/cron.d/dwh
	rm -f /etc/cron.d/api
	rm -f /etc/dwh_crontab
	rm -r /etc/logrotate.d/kaltura*
	rm -rf /etc/kaltura.d
	rm -f /php.d/zzkaltura.ini
	rm -f /etc/httpd/conf.d/kaltura.conf
	rm -f /etc/init.d/kaltura*
	rm -f /etc/init.d/red5
	rm 
	printf "Kaltura removed\n" | tee -a $logfile
}
