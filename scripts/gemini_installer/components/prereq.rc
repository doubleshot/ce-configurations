# This installs all the prerequisities for system prior to installing any of the kaltura
# components

install_prereq() {

# Install required packages
printf "Installing required packages\n" | tee -a $logfile
if ! yum -y install postfix php-gd php-pdo php-mysql php-pecl-apc php-soap php-common php php-pear php-xml php-devel php-mbstring php-xmlrpc php-cli php-curl memcached zlib.i686 bzip2-libs.i686 glibc.i686 ImageMagick ncurses-libs.i686 httpd php-pecl-memcache dos2unix mysql rsync mailx cronie wget memcached git svn bind-utils gcc make telnet man php-devel libssh2 libssh2-devel &>> $logfile; then
	printf "Installationg of packages failed\n" | tee -a $logfile
	return 1
fi

# Install mcrypt
printf "Installing libmcrypt and php-mcrypt\n" | tee -a $logfile
if ! rpm -i rpms/libmcrypt-2.5.8-9.el6.x86_64.rpm &>> $logfile;then
	printf "\e[00;33mWarning:\e[00m unable to install libmcrypt library or libmcrypt is already installed\n" | tee -a $logfile
else
	if ! rpm -i rpms/php-mcrypt-5.3.3-1.el6.x86_64.rpm &>> $logfile;then
		printf "\e[00;33mWarning:\e[00m unable to install php-mcrypt or php-mcrypt is already installed\n" | tee -a $logfile
	fi
fi

# Install PHP PECL
printf "Installing PHP PECL\n" | tee -a $logfile
pecl channel-update pecl.php.net &>> $logfile
if ! pecl install -f ssh2 &>> $logfile <<< "\n" ;then
	printf "\e[00;33mWarning:\e[00m unable to install php pecl module, sftp drop folders will not work\n" | tee -a $logfile
else echo extension=ssh2.so > /etc/php.d/ssh2.ini
fi

# Install Phing
printf "Installing Phing\n" | tee -a $logfile
for var in pear.php.net pear.phing.info;do
    if pear channel-info $var &>> $logfile;then
        printf "$var already added, updating\n" &>> $logfile
        pear channel-update $var &>> $logfile
    elif ! pear channel-discover $var &>> $logfile;then
        printf "\e[00;33mWarning:\e[00m unable to discover $var\n" | tee -a $logfile
    else :
    fi
done
pear install --alldeps phing/phing-2.4.13 &>> $logfile
pear install --alldeps pear.php.net/VersionControl_SVN-0.5.1 &>> $logfile
pear install --alldeps pear/VersionControl_Git-0.4.4 &>> $logfile

# Disable SElinux
sed -i 's/SELINUX=enforcing/SELINUX=permissive/' /etc/selinux/config
if ! setenforce 0; then
	printf "\e[00;33mWarning:\e[00m unable to to change selinux status on the running server, a reboot might be needed\n" | tee -a $logfile
fi
	
}
